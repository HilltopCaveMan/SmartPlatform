// Generated by IBatisNetModel

using System;
using System.Collections;
using System.Collections.Generic;

using GDAL.Car;
using GModel.Car;
using GInterfaceDAL.Car;
using GModel.Basic;

namespace GBLL.Car
{
    public class CarInfoBLL
    {
        private ColligateQueryService query = new ColligateQueryService();

        private ICarInfoDao _iCarInfoDao = null;
        private ICarTypeDao _iCarTypeDao = null;
        public CarInfoBLL()
        {
            _iCarInfoDao = new CarInfoDao();
            _iCarTypeDao = new CarTypeDao();
        }

        public CarInfo GetCarInfoByCarNo(object o)
        {
            return _iCarInfoDao.GetCarInfoByCarNo( o);
        }

        public CarInfo GetCarInfoByCarId(object o)
        {
            return _iCarInfoDao.GetCarInfoByCarId(o);
        }

        public IList<CarInfo> GetCarInfoPage(object o)
        {
            return _iCarInfoDao.GetCarInfoPage(o);
        }

		public int GetCarInfoCount(object o)
        {
            return _iCarInfoDao.GetCarInfoCount(o);
        }

		public object Insert(CarInfo entity)
        {
            return  _iCarInfoDao.Insert(entity);
        }

        public int Update(CarInfo entity)
        {
            return _iCarInfoDao.Update(entity);
        }
		
        public string Delete(string condition,bool RemoveTerno)
        {
            return _iCarInfoDao.Delete(condition,RemoveTerno);
        }
        /// <summary>
        /// 添加CarInfo和用户自定义字段
        /// </summary>
        /// <param name="arr"></param>
        /// <returns></returns>
        public string InsertCarInfo(ArrayList arr) 
        {
            return _iCarInfoDao.InsertCarInfo(arr);
        }

        /// <summary>
        /// 添加CarInfo、用户自定义字段和车辆类型。
        /// </summary>
        /// <param name="arr"></param>
        /// <returns></returns>
        public string InsertCarInfo(ArrayList arr,string TypeName)
        {
            return _iCarInfoDao.InsertCarInfo(arr,TypeName);
        }



        public string UpdateCarInfo(ArrayList arr) 
        {
            return _iCarInfoDao.UpdateCarInfo(arr);
        }

        public string UpdateCarInfo(ArrayList arr,string TypeName)
        {
            return _iCarInfoDao.UpdateCarInfo(arr, TypeName);
        }

        public string UpdateCarType(CarInfo ci, string TypeName)
        {
            return _iCarInfoDao.UpdateCarType(ci, TypeName);
        }

        /// <summary>
        /// 批量导入车辆信息
        /// </summary>
        /// <returns></returns>
        public string insertCarInfoMul_bak(string DeptId, List<UpLoadTerBind> lut) 
        {
            string TerNoStr = "";
            //Hashtable htCarType = new Hashtable();
            //CarTypeView ct = new CarTypeView();
            //ct.Businessdivisionid = DeptId;
            //IList<CarTypeView> lpt = _iCarTypeDao.GetCarTypePage(ct);
            //for (int n = 0; n < lpt.Count; n++)
            //{
            //    if (!htCarType.ContainsKey(lpt[n].TypeName))
            //    {
            //        htCarType.Add(lpt[n].TypeName, lpt[n].TypeId);
            //    }
            //}
            for (int m = 0; m < lut.Count; m++)
            {
                //if (lut[m].CarNo.Trim() == "" || lut[m].CarType.Trim() == "" || lut[m].TerNo.Trim() == "")
                //{
                //    TerNoStr += lut[m].TerNo + ",";
                //    continue;
                //}
                string val = _iCarInfoDao.upLoadData(lut[m], DeptId);
                if (val != "true")
                {
                    TerNoStr += lut[m].TerNo + ",";
                }
            }
            if (TerNoStr == "")
            {
                return "true";
            }
            else {
                return TerNoStr;
            }
        }

        /// <summary>
        /// 智能星数据批量导入
        /// </summary>
        /// <param name="DeptId"></param>
        /// <param name="lut"></param>
        /// <returns></returns>
        public string insertCarInfoMul(string DeptId, List<UpLoadTerBind> lut)
        {
            //记录导入过程中日志信息
            string TerNoStr = "";

            if (lut.Count == 0) return "Err";

            #region

            if (lut.Count > 0)
            {
                //查询待转换车辆类型名称及ID集合
                //+++++++++++++++++++++++++++++++++++++++++++++++++++
                ArrayList G_dept_type_list = new ArrayList();

                string dept_ids = "";
                for (int m = 0; m < lut.Count; m++)
                {
                    if (lut[m].BusinessDivisionId != null)
                    {
                        dept_ids += ",'" + lut[m].BusinessDivisionId + "'";
                    }
                }
                if (dept_ids.Length > 0)
                {
                    dept_ids = dept_ids.Substring(1);
                }
                else
                {
                    dept_ids = " '" + DeptId + "' ";
                }

                List<CarType> Tmp_List = (new CarTypeDao()).GetCarTypeList(dept_ids);

                if (Tmp_List.Count > 0)
                {
                    foreach (CarType ct in Tmp_List)
                    {
                        G_dept_type_list.Add(ct);
                    }
                }

                //+++++++++++++++++++++++++++++++++++++++++++++++++++

                //检查转换车辆类型
                //+++++++++++++++++++++++++++++++++++++++++++++++++++
                for (int m = 0; m < lut.Count; m++)
                {
                    //++++++++++++++++++++++++++++
                    bool flg = false;

                    if(G_dept_type_list.Count>0)
                    {
                        foreach (CarType item in G_dept_type_list)
                        {
                            if (item.TypeName == lut[m].CarType)
                            {
                                if (lut[m].BusinessDivisionId != null)
                                {
                                    if(item.DeptId == lut[m].BusinessDivisionId)
                                    {
                                        flg = true;

                                        lut[m].CarType = item.TypeId;

                                        break;
                                    }
                                }
                                else
                                {
                                    flg = true;

                                    lut[m].CarType = item.TypeId;
                                    lut[m].BusinessDivisionId = DeptId;

                                    break;
                                }
                            }
                        }
                    }

                    //当前类型不存在时，写库
                    if (!flg && lut[m].CarType != null && lut[m].CarType != "")
                    {
                        //写库，并附值
                        CarType ct = new CarType();

                        ct.TypeId = System.Guid.NewGuid().ToString();
                        ct.TypeName = lut[m].CarType;

                        if (lut[m].BusinessDivisionId != null)
                        {
                            ct.DeptId = lut[m].BusinessDivisionId;
                        }
                        else
                        {
                            ct.DeptId = DeptId;
                        }

                        ct.TypeIsdel = "0";

                        (new CarTypeDao()).Insert(ct);

                        G_dept_type_list.Add(ct);

                        lut[m].CarType = ct.TypeId;
                    }
                }
                //+++++++++++++++++++++++++++++++++++++++++++++++++++

                for (int m = 0; m < lut.Count; m++)
                {

                    //保存
                    string val = _iCarInfoDao.upLoadData(lut[m],DeptId);
                    if (val != "true")
                    {
                        TerNoStr += lut[m].TerNo + ",";
                    }
                }
            }
            #endregion

            if (TerNoStr == "")
            {
                return "true";
            }
            else
            {
                return TerNoStr;
            }
        }

        public CarDetialInfo GetCarDetial(string TerNo) 
        {
            CarDetialInfo cdi = _iCarInfoDao.GetCarDetial(TerNo);
            return cdi;
        }
    }
}
	