// Generated by IBatisNetModel

using System;
using System.Collections;

using GModel.InterFace;
using GInterfaceDAL.InterFace;
using GDAL.InterFace;
using System.Collections.Generic;

namespace GBLL.InterFace
{
    public class SendinfoBLL
    {
        private ISendinfoDao _iSendinfoDao = null;
        public SendinfoBLL()
        {
            _iSendinfoDao = new SendinfoDao();
        }

        //public Sendinfo GetSendinfo(string id)
        //{
        //    return _iSendinfoDao.GetSendinfo(id);
        //}

        public IList<Sendinfo> GetSendinfoListByTerNo(object o)
        {
            return _iSendinfoDao.SelectSendinfoListByTerNo(o);
        }

        public IList<Sendinfo> GetSendinfoListByTerNos(object o)
        {
            return _iSendinfoDao.SelectSendinfoListByTerNos(o);
        }
        /// <summary>
        /// 获取各终端最新的一条数据
        /// </summary>
        /// <param name="o"></param>
        /// <returns></returns>
        public IList<Sendinfo> GetSendinfoListNeweastByTerNos(object o)
        {
            return _iSendinfoDao.SelectSendinfoListNeweastByTerNos(o);
        }

        public int GetSendinfoCountByTerNo(object o)
        {
            return _iSendinfoDao.GetSendinfoCountByTerNo(o);
        }

        public int GetSendinfoCountByTerNos(object o)
        {
            return _iSendinfoDao.GetSendinfoCountByTerNos(o);
        }

        public int GetSendinfoNeweastCountByTerNos(object o) 
        {
            return _iSendinfoDao.GetSendinfoNeweastCountByTerNos(o);
        }

        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public string Insert(Sendinfo entity)
        {
            try
            {
               object o = _iSendinfoDao.Insert(entity);
               if (o == null)
               {
                   return "true";
               }
               else 
               {
                   return "false";
               }

            }
            catch (Exception e)
            {
                return e.Message;
            }        
        }

        //public int Update(Sendinfo entity)
        //{
        //    return _iSendinfoDao.Update(entity);
        //}
		
        //public int Delete(string condition)
        //{
        //    return _iSendinfoDao.Delete(condition);
        //}

        /// <summary>
        /// 更新发送命令表
        /// </summary>
        /// <param name="id"></param>
        /// <param name="status"></param>
        /// <param name="resultStr"></param>
        /// <returns></returns>
        public string UpdateSendInfoTable(string id, string status, string resultStr)
        {
            try
            {
                Sendinfo si = new Sendinfo();
                si.Id = Convert.ToDouble(id);
                si.SendinfoStatus = Convert.ToDouble(status);
                si.Resultstr = resultStr;
                return _iSendinfoDao.UpdateSendInfoTable(si);
            }
            catch (Exception e)
            {
                return "false";
            }
        }

        /// <summary>
        /// 06命令发送后回执处理
        /// </summary>
        /// <param name="devid"></param>
        /// <param name="UpdatePara"></param>
        /// <param name="cmdResult"></param>
        /// <returns></returns>
        public string UpdateSendInfoTable_Devid(string devid, string UpdatePara, string cmdResult) 
        {
            try
            {
                _iSendinfoDao.UpdateSendInfoTable_Devid(devid,UpdatePara,cmdResult);
                return "true";
            }
            catch (Exception e)
            {
                return "false";
            }
        }

        /// <summary>
        /// 根据设备编号查询
        /// </summary>
        /// <param name="o"></param>
        /// <returns></returns>
        public IList<Sendinfo> GetSendinfoPageByDeviceId(string DeviceId)
        {
            return _iSendinfoDao.GetSendinfoPageByDeviceId(DeviceId);
        }

        /// <summary>
        /// 同时插入SendInfo和SendInfoLast表
        /// </summary>
        /// <param name="entity"></param>
        /// <returns>失败时返回设备ID</returns>
        public string InsertData(Sendinfo entity)
        {
            try
            {
                return _iSendinfoDao.InsertData(entity);
            }
            catch (Exception e)
            {
               return entity.DeviceId;
            }
        }

        /// <summary>
        /// 同时插入SendInfo和SendInfoLast表
        /// </summary>
        /// <param name="entity"></param>
        /// <returns>失败时返回设备ID</returns>
        public string InsertData(Sendinfo entity,int oldid)
        {
            try
            {
                return _iSendinfoDao.InsertDataNew(entity,oldid);
            }
            catch (Exception e)
            {
                return entity.DeviceId;
            }
        }

        public string InsertDataList(List<Sendinfo> lsi) 
        {
            string ErrorDevice="";
            if (lsi != null && lsi.Count > 0)
            {
                foreach (Sendinfo si in lsi)
                {
                    string s = InsertData(si);
                    if (s != "true")
                    {
                        ErrorDevice += si.DeviceId + ",";
                    }
                }
                if (ErrorDevice == "")
                {
                    return "true";
                }
                else 
                {
                    return ErrorDevice;
                }
            }
            else 
            {
                return "请选择要发送命令的设备！";
            }
            
        }

        public IList<Sendinfo> GetNewestSendinfo(string DeviceId)
        {
           return _iSendinfoDao.GetNewestSendinfo(DeviceId); 
        }
    }
}
	