// Generated by IBatisNetModel

using System;
using System.Collections;

using GModel.Location;
using GInterfaceDAL.Location;
using GDAL.Location;
using System.Collections.Generic;

namespace GBLL.Location
{
    public class RealtimeDataBLL
    {
        private IRealtimeDataDao _iRealtimeDataDao = null;
        public RealtimeDataBLL()
        {
            _iRealtimeDataDao = new RealtimeDataDao();
        }

		public RealtimeData GetRealtimeData(string TerNo)
        {
            return _iRealtimeDataDao.GetRealtimeData(TerNo);
        }

        public IList<RealtimeData> GetRealtimeDataPage(object o)
        {
            return _iRealtimeDataDao.GetRealtimeDataPage(o);
        }

		public int GetRealtimeDataCount(object o)
        {
            return _iRealtimeDataDao.GetRealtimeDataCount(o);
        }

        /// <summary>
        /// 插入实时数据表（REALTIME_DATA）与历史数据表（HISTORICAL_DATA）
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public string InsertData(RealtimeData entity)
        {
            try 
            {
                return  _iRealtimeDataDao.Insert(entity);
            }
            catch (Exception e) 
            {
                return e.Message;
            }
            
        }

        public int Delete(string condition)
        {
            return _iRealtimeDataDao.Delete(condition);
        }

        public IList<Selectcarmonitor> SelectCarMonitor(Hashtable scm) 
        {
            IList<Selectcarmonitor> carlist = _iRealtimeDataDao.SelectCarMonitor(scm);
            foreach(Selectcarmonitor car in carlist)
            {
                if (car.Settype == "101")
                {
                    if (car.Sleeptime != null && car.Sleeptime != "")
                    {
                        DateTime time1 = DateTime.Now;
                        DateTime time2 = Convert.ToDateTime(car.Sleeptime);
                        string dateDiff = null;
                        TimeSpan ts1 = new TimeSpan(time1.Ticks);
                        TimeSpan ts2 = new TimeSpan(time2.Ticks);
                        TimeSpan ts = ts1.Subtract(ts2).Duration();          //显示时间  

                        //dateDiff = ts.Days.ToString() + "天"
                        //+ ts.Hours.ToString() + "小时"
                        //+ ts.Minutes.ToString() + "分钟";

                        if (ts.Days != 0)
                        {
                            dateDiff += ts.Days.ToString() + "天";
                        }
                        if (ts.Hours != 0)
                        {
                            dateDiff += ts.Hours.ToString() + "小时";
                        }
                        if (ts.Minutes+1!=0)
                        {
                            dateDiff+= (ts.Minutes+1).ToString() + "分钟";
                        }
                        car.StopLong = dateDiff;
                    }
                }
            }

            return carlist;
        }

        public IList<Selectcarmonitor> SelectTerMonitor(Selectcarmonitor scm)
        {
            return _iRealtimeDataDao.SelectTerMonitor(scm);
        }

        public int GetCXWaringCount(Selectcarmonitor sm) {

            return _iRealtimeDataDao.GetCXWaringCount(sm);
        }

        public int GetDDWaringCount(Selectcarmonitor sm)
        {
            return _iRealtimeDataDao.GetDDWaringCount(sm);
        }

        public int GetQYWaringCount(Selectcarmonitor sm)
        {
            return _iRealtimeDataDao.GetQYWaringCount(sm);
        }

        public IList<TerData> GetTerData(Hashtable ht) 
        {
           return  _iRealtimeDataDao.GetTerData(ht);
        }

        public int GetTerDataCount(Hashtable ht) 
        {
            return _iRealtimeDataDao.GetTerDataCount(ht);
        }
    }
}
	