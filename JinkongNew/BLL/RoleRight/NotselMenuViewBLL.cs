// Generated by IBatisNetModel

using System;
using System.Collections;

using GModel.RoleRight;
using GInterfaceDAL.RoleRight;
using GDAL.RoleRight;
using System.Collections.Generic;
using GModel.Basic;

namespace GBLL.RoleRight
{
    public class NotselMenuViewBLL
    {
        private INotselMenuViewDao _iNotselMenuViewDao = null;
        public NotselMenuViewBLL()
        {
            _iNotselMenuViewDao = new NotselMenuViewDao();
        }

		public NotselMenuView GetNotselMenuView(object o)
        {
            return _iNotselMenuViewDao.GetNotselMenuView( o);
        }

        public IList<NotselMenuView> GetNotselMenuViewPage(object o)
        {
            return _iNotselMenuViewDao.GetNotselMenuViewPage(o);
        }

		public int GetNotselMenuViewCount(object o)
        {
            return _iNotselMenuViewDao.GetNotselMenuViewCount(o);
        }

        //public IList<NotselMenuView> GetNotselMenuViewList(object o)
        //{
            //return _iNotselMenuViewDao.GetNotselMenuViewList(o);
        //}

        public List<MenuInfo> GetMenuViewListByUser(UserInfo LoginUser)
        {
            List<NotselMenuView> DepList = new List<NotselMenuView>();
            List<MenuInfo> DepListAll = new List<MenuInfo>();
            List<MenuInfo> TreeLists = new List<MenuInfo>();
            List<NotselMenuView> TreeListAll = new List<NotselMenuView>();
            NotselMenuView d = new NotselMenuView();
            DepList = (List<NotselMenuView>)GetNotselMenuViewPage(d);
            if (LoginUser.UserId == "0")
            {
                if (DepList != null)
                {
                    foreach (NotselMenuView div in DepList)
                    {
                        MenuInfo DepObj = new MenuInfo();
                        DepObj.MenuId = div.MenuId;
                        DepObj.MenuName = div.MenuName;
                        DepObj.MenuParent = div.MenuParent;
                        MenuInfo fa = new MenuInfo();
                        fa.MenuId = div.MenuParent;
                        fa.MenuName = div.Fmenuname;
                        DepObj.FatherMenuObj = fa;
                        DepListAll.Add(DepObj);
                    }
                    TreeLists = DepListAll.FindAll(x => x.MenuParent == null || x.MenuParent.Trim() == "");

                    foreach (MenuInfo deptInfo in TreeLists)
                    {
                        deptInfo.MenuListSub = CreateMenu(deptInfo, DepListAll);
                    }
                }
            }
            return TreeLists;
        }

        private List<MenuInfo> CreateMenu(MenuInfo DepartmentObj, List<MenuInfo> DepartmentListTotal)
        {
            List<MenuInfo> lists = DepartmentListTotal.FindAll(x => x.FatherMenuObj.MenuId == DepartmentObj.MenuId);
            if (lists != null)
            {
                foreach (MenuInfo DepartmentObjTmp in lists)
                {
                    DepartmentObjTmp.MenuListSub = new List<MenuInfo>();
                    List<MenuInfo> ListTmp = CreateMenu(DepartmentObjTmp, DepartmentListTotal);
                    if (ListTmp != null)
                    {
                        DepartmentObjTmp.MenuListSub = ListTmp;
                    }
                    else
                    {
                        return null;
                    }
                }
            }
            return lists;
        }
    }
}
	