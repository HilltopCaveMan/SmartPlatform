// Generated by IBatisNetModel

using System;
using System.Collections;

using GModel.RoleRight;
using GInterfaceDAL.RoleRight;
using GDAL.RoleRight;
using System.Collections.Generic;
using GModel.Basic;

namespace GBLL.RoleRight
{
    public class SelMenuViewBLL
    {
        private ISelMenuViewDao _iSelMenuViewDao = null;
        public SelMenuViewBLL()
        {
            _iSelMenuViewDao = new SelMenuViewDao();
        }

		public SelMenuView GetSelMenuView(object o)
        {
            return _iSelMenuViewDao.GetSelMenuView( o);
        }

        public IList<SelMenuView> GetSelMenuViewPage(object o)
        {
            return _iSelMenuViewDao.GetSelMenuViewPage(o);
        }

		public int GetSelMenuViewCount(object o)
        {
            return _iSelMenuViewDao.GetSelMenuViewCount(o);
        }

        //public IList<SelMenuView> GetSelMenuViewList(object o)
        //{
            //return _iSelMenuViewDao.GetSelMenuViewList(o);
        //}

        public List<MenuInfo> GetMenuViewListByUser(UserInfo LoginUser)
        {
            List<SelMenuView> DepList = new List<SelMenuView>();
            List<MenuInfo> DepListAll = new List<MenuInfo>();
            List<MenuInfo> TreeLists = new List<MenuInfo>();
            List<SelMenuView> TreeListAll = new List<SelMenuView>();
            SelMenuView d = new SelMenuView();
            DepList = (List<SelMenuView>)GetSelMenuViewPage(d);
            if (LoginUser.UserId == "0")
            {
                if (DepList != null)
                {
                    foreach (SelMenuView div in DepList)
                    {
                        MenuInfo DepObj = new MenuInfo();
                        DepObj.MenuId = div.MenuId;
                        DepObj.MenuName = div.MenuName;
                        DepObj.MenuParent = div.MenuParent;
                        MenuInfo fa = new MenuInfo();
                        fa.MenuId = div.MenuParent;
                        fa.MenuName = div.Fmenuname;
                        DepObj.FatherMenuObj = fa;
                        DepListAll.Add(DepObj);
                    }
                    TreeLists = DepListAll.FindAll(x => x.MenuParent == null || x.MenuParent.Trim() == "");

                    foreach (MenuInfo deptInfo in TreeLists)
                    {
                        deptInfo.MenuListSub = CreateMenu(deptInfo, DepListAll);
                    }
                }
            }
            return TreeLists;
        }

        private List<MenuInfo> CreateMenu(MenuInfo DepartmentObj, List<MenuInfo> DepartmentListTotal)
        {
            List<MenuInfo> lists = DepartmentListTotal.FindAll(x => x.FatherMenuObj.MenuId == DepartmentObj.MenuId);
            if (lists != null)
            {
                foreach (MenuInfo DepartmentObjTmp in lists)
                {
                    DepartmentObjTmp.MenuListSub = new List<MenuInfo>();
                    List<MenuInfo> ListTmp = CreateMenu(DepartmentObjTmp, DepartmentListTotal);
                    if (ListTmp != null)
                    {
                        DepartmentObjTmp.MenuListSub = ListTmp;
                    }
                    else
                    {
                        return null;
                    }
                }
            }
            return lists;
        }
    }
}
	