// Generated by IBatisNetModel

using System;

using GInterfaceDAL.Car;
using System.Collections.Generic;
using GModel.Car;
using System.Data;
using System.Collections;
using IBatisNet.DataMapper;

namespace GDAL.Car
{
    public class CarTypeDao : BaseSqlMapDao, ICarTypeDao
    {
        public object Insert(CarType entity)
        {
            if ((entity.TypeId == null)
                || (entity.TypeId.ToString().Length == 0))
            {
                entity.TypeId = System.Guid.NewGuid().ToString();
            }

            return ExecuteInsert("CarType.InsertCarType", entity);
        }

        public int Update(CarType entity)
        {
            return ExecuteUpdate("CarType.UpdateCarType", entity);
        }

        /// <summary>
        /// 假删除
        /// </summary>
        /// <param name="condition"></param>
        /// <returns></returns>
        public string Delete(object condition)
        {
            ISqlMapper NewMap = SqlMapper.Instance();
            NewMap.BeginTransaction();
            try
            {
                object count = ExecuteQueryForObjectTrans("CarInfo.SelectCarInfoCountByCarType",condition,NewMap);
                if ((int)count > 0) 
                {
                    NewMap.RollBackTransaction();
                    return "ExistCar";
                    
                } 
                else 
                {
                    ExecuteUpdateTrans("CarType.DeleteCarType", condition,NewMap);
                    NewMap.CommitTransaction();
                    return "true";
                }
            }
            catch (Exception e)
            {
                NewMap.RollBackTransaction();
                return "false";
            }          
        }

        public CarType GetCarType(object userinfoId)
        {
            return (CarType)ExecuteQueryForObject("CarType.SelectCarType", userinfoId);
        }

        /// <summary>
        /// 依据单位ID与类型名称，返回汽车类型对象
        /// </summary>
        /// <param name="deptId"></param>
        /// <param name="typeName"></param>
        /// <returns></returns>
        public CarType GetCarType(object deptId,object typeName)
        {
            CarType carType = null;

            // DeptId , Type_Name
            
            string sql = @" select t.type_id,
                                   t.type_name,
                                   t.type_picture,
                                   t.type_pictype,
                                   t.dept_id,
                                   t.type_isdel
                              from CAR_TYPE t
                             where t.type_name = '" + typeName + @"'
                                and t.type_isdel = 0
                               and t.dept_id = '" + deptId + @"' ";

            System.Data.DataSet ds = this.QueryForDataSet("ColligateQuery.ProteanQuery", sql);
            
            if (ds != null
                && ds.Tables.Count > 0
                && ds.Tables[0].Rows.Count > 0)
            {
                foreach (System.Data.DataRow dr in ds.Tables[0].Rows)
                {
                    carType = this.CreateCarType(dr);
                    break;
                }
            }

            return carType;
        }

        public List<CarType> GetCarTypeList(string DeptIds)
        {
            List<CarType> list = new List<CarType>();

            // DeptId , Type_Name

            string sql = @" select t.type_id,
                                   t.type_name,
                                   t.type_picture,
                                   t.type_pictype,
                                   t.dept_id,
                                   t.type_isdel
                              from CAR_TYPE t
                             where t.type_isdel = 0
                               and t.dept_id in ( " + DeptIds + @" ) ";

            System.Data.DataSet ds = this.QueryForDataSet("ColligateQuery.ProteanQuery", sql);

            if (ds != null
                && ds.Tables.Count > 0
                && ds.Tables[0].Rows.Count > 0)
            {
                foreach (System.Data.DataRow dr in ds.Tables[0].Rows)
                {
                    list.Add(this.CreateCarType(dr));
                }
            }

            return list;
        }
        private CarType CreateCarType(DataRow dr_cartype)
        {
            CarType carType = new CarType();

            if (dr_cartype["dept_id"] != DBNull.Value)
            {
                carType.DeptId = dr_cartype["dept_id"].ToString();
            }

            if (dr_cartype["type_id"] != DBNull.Value)
            {
                carType.TypeId = dr_cartype["type_id"].ToString();
            }

            if (dr_cartype["type_name"] != DBNull.Value)
            {
                carType.TypeName = dr_cartype["type_name"].ToString();
            }

            if (dr_cartype["type_picture"] != DBNull.Value)
            {
                carType.TypePicture = (byte[])dr_cartype["type_picture"];
                carType.TypePictype = dr_cartype["type_pictype"].ToString();
            }

            return carType;
        }
        //public IList<CarType> GetCarTypeList(object o)
        //{
        //return ExecuteQueryForList<CarType>("CarType.SelectCarType", o);  
        //}

        public IList<CarTypeView> GetCarTypePage(object o)
        {
            return ExecuteQueryForList<CarTypeView>("CarType.SelectCarTypePage", o);
        }

        public int GetCarTypeCount(object o)
        {
            object count = ExecuteQueryForObject("CarType.SelectCarTypeCount", o);
            return (int)count;
        }

        public IList<CarTypeList> GetCarTypeList(object o)
        {
            return ExecuteQueryForList<CarTypeList>("CarType.SelectCarTypeListPage", o);
        }

        //public DataSet GetCarTypeDataSet(string queryName, string condition, int currentPage, int pageSize)
        //{
        //    DataSet ds = QueryForDataSet(queryName, condition, currentPage, pageSize);
        //    return ds;
        //}

        //public DataSet GetCarTypeDataSet(object o)
        //{
        //    //DataSet ds = QueryForDataSet("CarType.SelectCarTypeImage", o);

        //    return ds;
        //}

        public ArrayList getCarTypeImage(CarType o)
        {
            ArrayList al = ExecuteQueryForArrayList("CarType.SelectCarTypeImage", o);
            return al;

        }
    }
}
