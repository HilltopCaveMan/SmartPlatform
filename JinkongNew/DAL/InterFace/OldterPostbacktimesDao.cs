// Generated by IBatisNetModel

using System;

using GInterfaceDAL.InterFace;
using System.Collections.Generic;
using GModel.InterFace;
using IBatisNet.DataMapper;

namespace GDAL.InterFace
{
    public class OldterPostbacktimesDao : BaseSqlMapDao, IOldterPostbacktimesDao
    {
		 public object Insert(OldterPostbacktimes entity)
        {
            return ExecuteInsert("OldterPostbacktimes.InsertOldterPostbacktimes", entity);
        }

        public int Update(OldterPostbacktimes entity)
        {
            return ExecuteUpdate("OldterPostbacktimes.UpdateOldterPostbacktimes", entity);
        }

		public int Delete(object condition)
        {
            //删除跟插入调同一个方法。
            return ExecuteUpdate("OldterPostbacktimes.DeleteOldterPostbacktimes", condition);
        }

        public int GetOldterPostbacktimes(string TerNo,ref string msg)
        {
            if (TerNo.Trim() != "")
            {
                ISqlMapper NewMap = SqlMapper.Instance();
                NewMap.BeginTransaction();
                try
                {
                    OldterPostbacktimes optSel = new OldterPostbacktimes();
                    optSel.TerNo = TerNo;
                    OldterPostbacktimes opt = (OldterPostbacktimes)ExecuteQueryForObjectTrans("OldterPostbacktimes.SelectOldterPostbacktimes", optSel, NewMap);
                    if (opt != null)
                    {
                        opt.Postbacktimes = opt.Postbacktimes + 1; 
                        ExecuteUpdateTrans("OldterPostbacktimes.UpdateOldterPostbacktimes", opt, NewMap);
                        NewMap.CommitTransaction();
                        return Convert.ToInt32(opt.Postbacktimes);
                    }
                    else
                    {
                        NewMap.RollBackTransaction();
                        msg = "无此编号的数据！";
                        return 0;                       
                    } 
                }
                catch (Exception e)
                {
                    NewMap.RollBackTransaction();
                    msg = e.Message;
                    return -1;
                }
            }
            else 
            {
                msg = "请输入终端编号！";
                return -1;
            }          
        }

        public IList<OldterPostbacktimes> GetOldterPostbacktimesPage(object o) 
        {
            return ExecuteQueryForList<OldterPostbacktimes>("OldterPostbacktimes.SelectOldterPostbacktimesPage", o);
        }

		public int GetOldterPostbacktimesCount(object o) 
        {
            object count = ExecuteQueryForObject("OldterPostbacktimes.SelectOldterPostbacktimesCount", o);
            return (int)count;
        }
    }
}
	