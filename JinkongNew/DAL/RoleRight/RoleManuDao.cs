// Generated by IBatisNetModel

using System;

using GInterfaceDAL.RoleRight;
using System.Collections.Generic;
using GModel.RoleRight;
using IBatisNet.DataMapper;

namespace GDAL.RoleRight
{
    public class RoleManuDao : BaseSqlMapDao, IRoleManuDao
    {
        public object Insert(RoleManu entity)
        {
            return ExecuteInsert("RoleManu.InsertRoleManu", entity);
        }

        public int Update(RoleManu entity)
        {
            return ExecuteUpdate("RoleManu.UpdateRoleManu", entity);
        }

        public int Delete(object condition)
        {
            //删除跟插入调同一个方法。
            return ExecuteUpdate("RoleManu.DeleteRoleManu", condition);
        }

        RoleManu IRoleManuDao.GetRoleManu(object userinfoId)
        {
            return (RoleManu)ExecuteQueryForObject("RoleManu.SelectRoleManu", userinfoId);
        }


        public IList<RoleManu> GetRoleManuPage(object o)
        {
            return ExecuteQueryForList<RoleManu>("RoleManu.SelectRoleManuPage", o);
        }

        public int GetRoleManuCount(object o)
        {
            object count = ExecuteQueryForObject("RoleManu.SelectRoleManuCount", o);
            return (int)count;
        }
        //public int GetRoleManuCount(string RmId)
        //{
        //    object count = ExecuteQueryForObject("RoleManu.GetRoleManuCountById", RmId);
        //    return (int)count;
        //}


        public string AddRM(RoleManu rm)
        {
            ISqlMapper NewMap = SqlMapper.Instance();
            try
            {
                NewMap.BeginTransaction();
                object c = ExecuteQueryForObjectTrans("RoleManu.SelectRoleCountByRoleAndMenu", rm, NewMap);
               if ((int)c == 0)
               {
                   rm.RmId = System.Guid.NewGuid().ToString();
                   ExecuteInsertTrans("RoleManu.InsertRoleManu", rm, NewMap);
                   NewMap.CommitTransaction();
                   return "true";
               }
               else {
                   NewMap.CommitTransaction();
                   return "该角色已经分配此权限";              
               }              
            }
            catch (Exception e)
            {
                NewMap.RollBackTransaction();
                return "false";
            }
        }

        public int DelRM(RoleManu rm) 
        {
            try
            {
                return  ExecuteUpdate("RoleManu.DeleteRoleManu", rm);               
            }
            catch (Exception e)
            {
                return -1;
            }
        }
    }
}
