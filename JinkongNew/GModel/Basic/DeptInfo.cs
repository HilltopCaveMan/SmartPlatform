// Generated by IBatisNetModel
using System;
using System.Collections.Generic;

namespace GModel.Basic
{
	[Serializable]
	public class DeptInfo
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;
		
		private string _businessdivisionid; 
		private string _businessdivisionname; 
		private string _fatherid; 
		private string _businessdivisioncode; 
        private string _isdel;
        private string _deptype;
		#endregion
		
		#region Default ( Empty ) Class Constuctor

       
		/// <summary>
		/// default constructor
		/// </summary>
		public DeptInfo()
		{
			_businessdivisionid = ""; 
			_businessdivisionname = "";  
			_fatherid = ""; 
			_businessdivisioncode = "";
            _isdel = "";
            _deptype = "";
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties

        public List<DeptInfo> ListDepartmentSub 
        { 
            get; 
            set; 
        }

		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisionid
		{
			get { return _businessdivisionid; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionid", value, value.ToString());
				
				_isChanged |= (_businessdivisionid != value); _businessdivisionid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisionname
		{
			get { return _businessdivisionname; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionname", value, value.ToString());
				
				_isChanged |= (_businessdivisionname != value); _businessdivisionname = value;
			}
		}

        /// <summary>
        /// 是否删除
        /// </summary>		
        public string Isdel
        {
            get { return _isdel; }
            set
            {
                if (value != null && value.Length > 1)
                    throw new ArgumentOutOfRangeException("Invalid value for Isdel", value, value.ToString());

                _isChanged |= (_isdel != value); _isdel = value;
            }
        }

        /// <summary>
        /// 是否结清 1表示结清
        /// </summary>
        public string DepType
        {
            get { return _deptype; }
            set
            {
                if (value != null && value.Length > 3)
                    throw new ArgumentOutOfRangeException("Invalid value for DepType", value, value.ToString());

                _isChanged |= (_deptype != value); _deptype = value;
            }
        }
			
		/// <summary>
		/// 
		/// </summary>		
		public string Fatherid
		{
			get { return _fatherid; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Fatherid", value, value.ToString());
				
				_isChanged |= (_fatherid != value); _fatherid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisioncode
		{
			get { return _businessdivisioncode; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisioncode", value, value.ToString());
				
				_isChanged |= (_businessdivisioncode != value); _businessdivisioncode = value;
			}
		}	

			
		
		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }

        public DeptInfo FatherDepartmentObj { get; set; }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
            set {_isDeleted = value; }
		}
		
		#endregion 
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
	}
}
