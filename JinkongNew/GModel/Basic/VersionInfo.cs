// Generated by IBatisNetModel
using System;

namespace GModel.Basic
{
	[Serializable]
	public sealed class VersionInfo
	{
		#region Private Members

		private bool _isChanged;
        private bool _isDeleted;

        private int _startdata = 0;
        private int _enddata = 0;
        private int _newRow = 0;

		private string _ver_id; 
		private string _ver_name; 
		private string _ver_number; 
		private string _app_type; 
		private string _app_url; 
		private string _publisher; 
		private DateTime _publish_date; 
		private string _description; 	
	
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public VersionInfo()
		{
			_ver_id = ""; 
			_ver_name = ""; 
			_ver_number = ""; 
			_app_type = ""; 
			_app_url = ""; 
			_publisher = ""; 
			_publish_date = new DateTime(); 
			_description = ""; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 版本ID
		/// </summary>		
		public string VerId
		{
			get { return _ver_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for VerId", value, value.ToString());
				
				_isChanged |= (_ver_id != value); _ver_id = value;
			}
		}
			
		/// <summary>
		/// 版本名称
		/// </summary>		
		public string VerName
		{
			get { return _ver_name; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for VerName", value, value.ToString());
				
				_isChanged |= (_ver_name != value); _ver_name = value;
			}
		}
			
		/// <summary>
		/// 版本号
		/// </summary>		
		public string VerNumber
		{
			get { return _ver_number; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for VerNumber", value, value.ToString());
				
				_isChanged |= (_ver_number != value); _ver_number = value;
			}
		}
			
		/// <summary>
		/// APP类型
		/// </summary>		
		public string AppType
		{
			get { return _app_type; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for AppType", value, value.ToString());
				
				_isChanged |= (_app_type != value); _app_type = value;
			}
		}
			
		/// <summary>
		/// APP下载路径
		/// </summary>		
		public string AppUrl
		{
			get { return _app_url; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for AppUrl", value, value.ToString());
				
				_isChanged |= (_app_url != value); _app_url = value;
			}
		}
			
		/// <summary>
		/// 发布人
		/// </summary>		
		public string Publisher
		{
			get { return _publisher; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Publisher", value, value.ToString());
				
				_isChanged |= (_publisher != value); _publisher = value;
			}
		}
			
		/// <summary>
		/// 发布日期
		/// </summary>		
		public DateTime PublishDate
		{
			get { return _publish_date; }
			set { _isChanged |= (_publish_date != value); _publish_date = value; }
		}
			
		/// <summary>
		/// 描述
		/// </summary>		
		public string Description
		{
			get { return _description; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Description", value, value.ToString());
				
				_isChanged |= (_description != value); _description = value;
			}
		}

        public int StartData
        {
            get { return _startdata; }
            set
            {
                _startdata = value;
            }
        }

        public int EndData
        {
            get { return _enddata; }
            set
            {
                _enddata = value;
            }
        }
        public int NewRow
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
        {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsDeleted
        {
            get { return _isDeleted; }
        }
		
		#endregion 
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
