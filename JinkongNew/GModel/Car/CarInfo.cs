// Generated by IBatisNetModel
using System;

namespace GModel.Car
{
    [Serializable]
    public class CarInfo
    {
        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private int _startdata = 0;
        private int _enddata = 0;
        private int _newRow = 0;

        private string _car_id;
        private string _car_no;
        private string _type_id;
        private string _dept_id;
        private string _businessdivisionid;
        private DateTime _car_date;
        private string _car_adminName;
        private string _car_admincardid;
        private string _car_deptcode;
        private string _car_color;
        private string _car_frame;
        private string oweraddress;
        private string owerphone;
        private string installname;
        private string installaddress;
        private string installphone;
        private string installplace;
        private string installtime;
        private string entryname;
        private string entryphone;
        private string safeorder;
        private string loanmoney;
        private string loanyear;
        private string carmodel;
        private string enginenumber;
        private string description;
        private string contractnum;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public CarInfo()
        {
            _car_id = "";
            _car_no = "";
            _type_id = "";
            _businessdivisionid = "";
            _car_date = DateTime.Now;
            _car_adminName = "";
            _car_admincardid = "";
            _car_deptcode = "";
            _car_color = "";
            _car_frame = "";
            oweraddress="";
            owerphone="";
            installname="";
            installaddress="";
            installphone="";
            installplace="";
            installtime="";
            entryname="";
            entryphone="";
            safeorder="";
            loanmoney="";
            loanyear="";
            carmodel="";
            enginenumber="";
            description = "";
            contractnum = "";
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties
        /// <summary>
        /// GUID
        /// </summary>		
        public string CarId
        {
            get { return _car_id; }
            set
            {
                if (value != null && value.Length > 40)
                    throw new ArgumentOutOfRangeException("Invalid value for CarId", value, value.ToString());

                _isChanged |= (_car_id != value); _car_id = value;
            }
        }

        /// <summary>
        /// 车牌号
        /// </summary>		
        public string CarNo
        {
            get { return _car_no; }
            set
            {
                if (value != null && value.Length > 40)
                    throw new ArgumentOutOfRangeException("Invalid value for CarNo", value, value.ToString());

                _isChanged |= (_car_no != value); _car_no = value;
            }
        }

        /// <summary>
        /// 车辆类型ID
        /// </summary>		
        public string TypeId
        {
            get { return _type_id; }
            set
            {
                if (value != null && value.Length > 40)
                    throw new ArgumentOutOfRangeException("Invalid value for TypeId", value, value.ToString());

                _isChanged |= (_type_id != value); _type_id = value;
            }
        }

        /// <summary>
        /// 所属企业ID
        /// </summary>		
        public string Businessdivisionid
        {
            get { return _businessdivisionid; }
            set
            {
                if (value != null && value.Length > 40)
                    throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionid", value, value.ToString());

                _isChanged |= (_businessdivisionid != value); _businessdivisionid = value;
            }
        }

        /// <summary>
        /// 添加日期
        /// </summary>		
        public DateTime CarDate
        {
            get { return _car_date; }
            set { _isChanged |= (_car_date != value); _car_date = value; }
        }

        /// <summary>
        /// 车主姓名
        /// </summary>
        public string CarAdminName {
            get { return _car_adminName; }
            set {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CarAdminName", value, value.ToString());
                _isChanged |= (_car_adminName != value); _car_adminName = value;
            }
        }

        /// <summary>
        /// 身份证号
        /// </summary>
        public string CarAdminCardid
        {
            get { return _car_admincardid; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CarAdminCardid", value, value.ToString());
                _isChanged |= (_car_admincardid != value); _car_admincardid = value;
            }
        }

        /// <summary>
        /// 车身颜色
        /// </summary>
        public string CarColor
        {
            get { return _car_color; }
            set
            {
                if (value != null && value.Length > 80)
                    throw new ArgumentOutOfRangeException("Invalid value for CarColor", value, value.ToString());
                _isChanged |= (_car_color != value); _car_color = value;
            }
        }

        /// <summary>
        /// 车架号
        /// </summary>
        public string CarFrame
        {
            get { return _car_frame; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CarFrame", value, value.ToString());
                _isChanged |= (_car_frame != value); _car_frame = value;
            }
        }

        /// <summary>
        /// 部门编码
        /// </summary>
        public string CarDeptcode
        {
            get { return _car_deptcode; }
            set {
                if (value != null && value.Length > 80)
                    throw new ArgumentOutOfRangeException("Invalid value for CarDeptcode", value, value.ToString());
                _isChanged |= (_car_deptcode != value); _car_deptcode = value;
            }
        }

        /// <summary>
        /// 车主地址
        /// </summary>
        public string OwerAddress 
        {
            get { return oweraddress; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for OwerAddress", value, value.ToString());
                _isChanged |= (oweraddress != value); oweraddress = value;
            }
        }

        /// <summary>
        /// 车主电话
        /// </summary>
        public string OwerPhone
        {
            get { return owerphone; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for OwerPhone", value, value.ToString());
                _isChanged |= (owerphone != value); owerphone = value;
            }
        }

        /// <summary>
        /// 安装人
        /// </summary>
        public string InstallName
        {
            get { return installname; }
            set {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallName", value, value.ToString());
                _isChanged |= (installname != value); installname = value;
            }
        }

        /// <summary>
        /// 安装位置
        /// </summary>
        public string InstallAddress
        {
            get { return installaddress; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallAddress", value, value.ToString());
                _isChanged |= (installaddress != value); installaddress = value;
            }
        }

        /// <summary>
        /// 安装人联系电话
        /// </summary>
        public string InstallPhone
        {
            get { return installphone; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallPhone", value, value.ToString());
                _isChanged |= (installphone != value); installphone = value;
            }
        }

        /// <summary>
        /// 安装地点
        /// </summary>
        public string InstallPlace
        {
            get { return installplace; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallPlace", value, value.ToString());
                _isChanged |= (installplace != value); installplace = value;
            }
        }

        /// <summary>
        /// 安装时间
        /// </summary>
        public string InstallTime
        {
            get { return installtime; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallTime", value, value.ToString());
                _isChanged |= (installtime != value); installtime = value;
            }
        }

        /// <summary>
        /// 录入人
        /// </summary>
        public string EntryName
        {
            get { return entryname; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for EntryName", value, value.ToString());
                _isChanged |= (entryname != value); entryname = value;
            }
        }


        /// <summary>
        /// 录入人电话
        /// </summary>
        public string EntryPhone
        {
            get { return entryphone; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for EntryPhone", value, value.ToString());
                _isChanged |= (entryphone != value); entryphone = value;
            }
        }

        /// <summary>
        /// 保险单号
        /// </summary>
        public string SafeOrder
        {
            get { return safeorder; }
            set {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for SafeOrder", value, value.ToString());
                _isChanged |= (safeorder != value); safeorder = value;            
            }
        }

        /// <summary>
        /// 融资金额
        /// </summary>
        public string LoanMoney  
        {
            get { return loanmoney; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for LoanMoney", value, value.ToString());
                _isChanged |= (loanmoney != value); loanmoney = value;
            }
        }

        /// <summary>
        /// 贷款年限
        /// </summary>
        public string LoanYear 
        {
            get { return loanyear; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for LoanYear", value, value.ToString());
                _isChanged |= (loanyear != value); loanyear = value;
            }
        }

        /// <summary>
        /// 车辆型号
        /// </summary>
        public string CarModel
        {
            get { return carmodel; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for CarModel", value, value.ToString());
                _isChanged |= (carmodel != value); carmodel = value;
            }
        }

        /// <summary>
        /// 发动机号
        /// </summary>
        public string EngineNumber
        {
            get { return enginenumber; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for EngineNumber", value, value.ToString());
                _isChanged |= (enginenumber != value); enginenumber = value;
            }
        }

        /// <summary>
        /// 合同号
        /// </summary>
        public string ContractNum
        {
            get { return contractnum; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ContractNum", value, value.ToString());
                _isChanged |= (contractnum != value); contractnum = value;
            }
        }

        /// <summary>
        /// 描述
        /// </summary>
        public string Description
        {
            get { return description; }
            set {
                if (value != null && value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for Description", value, value.ToString());
                _isChanged |= (description != value); description = value;
            }
        }

        public int StartData
        {
            get { return _startdata; }
            set
            {
                _startdata = value;
            }
        }

        public int EndData
        {
            get { return _enddata; }
            set
            {
                _enddata = value;
            }
        }
        public int NewRow
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
        {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set { _isDeleted = value; }
        }

        #endregion


        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public void MarkAsDeleted()
        {
            _isDeleted = true;
            _isChanged = true;
        }

        public string DeptId
        {
            get { return _dept_id; }
            set
            {
                if (value != null && value.Length > 40)
                    throw new ArgumentOutOfRangeException("Invalid value for DeptId", value, value.ToString());

                _isChanged |= (_dept_id != value); _dept_id = value;
            }
        }


        #endregion

        public string TerNo { get; set; }
        public string UF_JQXLH { get; set; }
        public string UF_JZ { get; set; }
        public string UF_JZDZ { get; set; }
        public string UF_AZR { get; set; }
        public string UF_AZWZ { get; set; }
        public string UF_AZRLXDH { get; set; }
        public string UF_LRR { get; set; }
        public string UF_LRRLXDH { get; set; }
        public string UP_Time { get; set; }
        public string UF_JZLXDH { get; set; }
    }
}
