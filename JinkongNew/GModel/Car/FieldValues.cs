// Generated by IBatisNetModel
using System;

namespace GModel.Car
{
	[Serializable]
	public class FieldValues
	{
		#region Private Members

		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;
		
		private string _car_id; 
		private string _uf_id; 
		private string _field_value; 
		private string _field_id;

        private string _deptId;

		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public FieldValues()
		{
			_car_id = ""; 
			_uf_id = ""; 
			_field_value = ""; 
			_field_id = "";
            _deptId = "";
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties

        public string DeptId
        {
            get { return _deptId; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for DeptId", value, value.ToString());

                _isChanged |= (_deptId != value); _deptId = value;
            }
        }

		/// <summary>
		/// 车辆ID
		/// </summary>		
		public string CarId
		{
			get { return _car_id; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for CarId", value, value.ToString());
				
				_isChanged |= (_car_id != value); _car_id = value;
			}
		}
			
		/// <summary>
		/// 字段名称
		/// </summary>		
		public string UfId
		{
			get { return _uf_id; }
			set	
			{
				if( value!= null && value.Length > 128)
					throw new ArgumentOutOfRangeException("Invalid value for UfId", value, value.ToString());
				
				_isChanged |= (_uf_id != value); _uf_id = value;
			}
		}
			
		/// <summary>
		/// 字段值
		/// </summary>		
		public string FieldValue
		{
			get { return _field_value; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for FieldValue", value, value.ToString());
				
				_isChanged |= (_field_value != value); _field_value = value;
			}
		}
			
		/// <summary>
		/// ID
		/// </summary>		
		public string FieldId
		{
			get { return _field_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for FieldId", value, value.ToString());
				
				_isChanged |= (_field_id != value); _field_id = value;
			}
		}
			
		
		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
