// Generated by IBatisNetModel
using System;
using System.Web.Mvc;
using System.ComponentModel.DataAnnotations;

namespace GModel.Car
{
	[Serializable]
	public class TerminalInfo
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;
		
		private string _ter_guid; 
		private string _ter_no; 
		private string _dept_id; 
		private string _ter_softver; 
		private string _ter_hardver; 
		private string _ter_state; 
		private string _car_id; 
		private string _ter_typeid; 
		private DateTime _ter_innettime; 
		private string _ter_simcard; 
		private DateTime _activetime;
        private string _ter_deptcode;
        private string _ter_carno;
        private DateTime _ter_overtime;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public TerminalInfo()
		{
			_ter_guid = ""; 
			_ter_no = ""; 
			_dept_id = ""; 
			_ter_softver = ""; 
			_ter_hardver = ""; 
			_ter_state = ""; 
			_car_id = ""; 
			_ter_typeid = ""; 
			_ter_innettime = new DateTime(); 
			_ter_simcard = ""; 
			_activetime = new DateTime();
            _ter_deptcode = "";
            _ter_carno = "";
            _ter_overtime = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 终端GUID
		/// </summary>	
		public string TerGuid
		{
			get { return _ter_guid; }
			set	
			{
		        _ter_guid = value;
			}
		}
			
		/// <summary>
		/// 终端编码
		/// </summary>		
		public string TerNo
		{
			get { return _ter_no; }
			set	
			{
				_isChanged |= (_ter_no != value); _ter_no = value;
			}
		}
			
		/// <summary>
		/// 所属企业ID
		/// </summary>		
		public string DeptId
		{
			get { return _dept_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for DeptId", value, value.ToString());
				
				_isChanged |= (_dept_id != value); _dept_id = value;
			}
		}
			
		/// <summary>
		/// 设备软件版本
		/// </summary>		
		public string TerSoftver
		{
			get { return _ter_softver; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for TerSoftver", value, value.ToString());
				
				_isChanged |= (_ter_softver != value); _ter_softver = value;
			}
		}
			
		/// <summary>
		/// 设备硬件版本
		/// </summary>		
		public string TerHardver
		{
			get { return _ter_hardver; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for TerHardver", value, value.ToString());
				
				_isChanged |= (_ter_hardver != value); _ter_hardver = value;
			}
		}
			
		/// <summary>
		/// 设备状态
		/// </summary>		
		public string TerState
		{
			get { return _ter_state; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for TerState", value, value.ToString());
				
				_isChanged |= (_ter_state != value); _ter_state = value;
			}
		}
			
		/// <summary>
		/// 绑定车ID
		/// </summary>		
		public string CarId
		{
			get { return _car_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for CarId", value, value.ToString());
				
				_isChanged |= (_car_id != value); _car_id = value;
			}
		}
			
		/// <summary>
		/// 终端类型
		/// </summary>		
		public string TerTypeid
		{
			get { return _ter_typeid; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for TerTypeid", value, value.ToString());
				
				_isChanged |= (_ter_typeid != value); _ter_typeid = value;
			}
		}
			
		/// <summary>
		/// 入网时间
		/// </summary>		
		public DateTime TerInnettime
		{
			get { return _ter_innettime; }
			set { _isChanged |= (_ter_innettime != value); _ter_innettime = value; }
		}
			
		/// <summary>
		/// SIM卡号
		/// </summary>	
        
		public string TerSimcard
		{
			get { return _ter_simcard; }
			set	
			{
				if( value!= null && value.Length > 13)
					throw new ArgumentOutOfRangeException("Invalid value for TerSimcard", value, value.ToString());
				
				_isChanged |= (_ter_simcard != value); _ter_simcard = value;
			}
		}
			
		/// <summary>
		/// 激活时间
		/// </summary>		
		public DateTime Activetime
		{
			get { return _activetime; }
			set { _isChanged |= (_activetime != value); _activetime = value; }
		}

        /// <summary>
        /// 部门编码
        /// </summary>
        public string TerDeptcode
        {
            get { return _ter_deptcode; }
            set {
                if (value != null && value.Length > 80)
                    throw new ArgumentOutOfRangeException("Invalid value for TerDeptcode",value,value.ToString());
                _isChanged |= (_ter_deptcode != value); _ter_deptcode = value;
            }
        }

        /// <summary>
        /// 车牌号
        /// </summary>
        public string TerCarno
        {
            get { return _ter_carno; }
            set { 
                if(value!=null && value.Length>40)
                    throw new ArgumentOutOfRangeException("Invalid value for TerCarno", value, value.ToString());
                _isChanged |= (_ter_carno!=value); _ter_carno = value;
            }
        }

        /// <summary>
        /// 结清时间
        /// </summary>		
        public DateTime TerOvertime
        {
            get { return _ter_overtime; }
            set { _isChanged |= (_ter_overtime != value); _ter_overtime = value; }
        }

		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
            set { _isDeleted=value; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
