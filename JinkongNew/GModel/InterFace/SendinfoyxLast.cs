// Generated by IBatisNetModel
using System;

namespace GModel.InterFace
{
	[Serializable]
	public sealed class SendinfoyxLast
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private string _id; 
		private string _sendinfoyxid; 
		private string _device_id; 
		private string _carinfo_sim; 
		private string _sendinfo_command; 
		private double _swiftnumber; 
		private DateTime _sendinfo_ptime; 
		private double _sendinfo_status; 
		private string _sendinfo_userid; 
		private string _sendinfo_description; 
		private string _sendmethod; 
		private double _isonline; 
		private DateTime _sendtotime; 
		private string _sendtocmd; 
		private string _rece_cmd; 
		private DateTime _rece_time; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public SendinfoyxLast()
		{
			_id = ""; 
			_sendinfoyxid = ""; 
			_device_id = ""; 
			_carinfo_sim = ""; 
			_sendinfo_command = ""; 
			_swiftnumber = new double(); 
			_sendinfo_ptime = new DateTime(); 
			_sendinfo_status = new double(); 
			_sendinfo_userid = ""; 
			_sendinfo_description = ""; 
			_sendmethod = ""; 
			_isonline = new double(); 
			_sendtotime = new DateTime(); 
			_sendtocmd = ""; 
			_rece_cmd = ""; 
			_rece_time = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// ID
		/// </summary>		
		public string Id
		{
			get { return _id; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Id", value, value.ToString());
				
				_isChanged |= (_id != value); _id = value;
			}
		}
			
		/// <summary>
		/// I600发送命令历史表ID
		/// </summary>		
		public string Sendinfoyxid
		{
			get { return _sendinfoyxid; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Sendinfoyxid", value, value.ToString());
				
				_isChanged |= (_sendinfoyxid != value); _sendinfoyxid = value;
			}
		}
			
		/// <summary>
		/// 终端编号
		/// </summary>		
		public string DeviceId
		{
			get { return _device_id; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for DeviceId", value, value.ToString());
				
				_isChanged |= (_device_id != value); _device_id = value;
			}
		}
			
		/// <summary>
		/// sim卡号
		/// </summary>		
		public string CarinfoSim
		{
			get { return _carinfo_sim; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for CarinfoSim", value, value.ToString());
				
				_isChanged |= (_carinfo_sim != value); _carinfo_sim = value;
			}
		}
			
		/// <summary>
		/// 发送命令码（平台拼接命令）
		/// </summary>		
		public string SendinfoCommand
		{
			get { return _sendinfo_command; }
			set	
			{
				if( value!= null && value.Length > 300)
					throw new ArgumentOutOfRangeException("Invalid value for SendinfoCommand", value, value.ToString());
				
				_isChanged |= (_sendinfo_command != value); _sendinfo_command = value;
			}
		}
			
		/// <summary>
		/// 流水号
		/// </summary>		
		public double Swiftnumber
		{
			get { return _swiftnumber; }
			set { _isChanged |= (_swiftnumber != value); _swiftnumber = value; }
		}
			
		/// <summary>
		/// 发送命令时间
		/// </summary>		
		public DateTime SendinfoPtime
		{
			get { return _sendinfo_ptime; }
			set { _isChanged |= (_sendinfo_ptime != value); _sendinfo_ptime = value; }
		}
			
		/// <summary>
		/// 发送命令状态
		/// </summary>		
		public double SendinfoStatus
		{
			get { return _sendinfo_status; }
			set { _isChanged |= (_sendinfo_status != value); _sendinfo_status = value; }
		}
			
		/// <summary>
		/// 发送人
		/// </summary>		
		public string SendinfoUserid
		{
			get { return _sendinfo_userid; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for SendinfoUserid", value, value.ToString());
				
				_isChanged |= (_sendinfo_userid != value); _sendinfo_userid = value;
			}
		}
			
		/// <summary>
		/// 发送信息描述
		/// </summary>		
		public string SendinfoDescription
		{
			get { return _sendinfo_description; }
			set	
			{
				if( value!= null && value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for SendinfoDescription", value, value.ToString());
				
				_isChanged |= (_sendinfo_description != value); _sendinfo_description = value;
			}
		}
			
		/// <summary>
		/// 发送方式
		/// </summary>		
		public string Sendmethod
		{
			get { return _sendmethod; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Sendmethod", value, value.ToString());
				
				_isChanged |= (_sendmethod != value); _sendmethod = value;
			}
		}
			
		/// <summary>
		/// 是否在线
		/// </summary>		
		public double Isonline
		{
			get { return _isonline; }
			set { _isChanged |= (_isonline != value); _isonline = value; }
		}
			
		/// <summary>
		/// 执行时间
		/// </summary>		
		public DateTime Sendtotime
		{
			get { return _sendtotime; }
			set { _isChanged |= (_sendtotime != value); _sendtotime = value; }
		}
			
		/// <summary>
		/// 执行命令码
		/// </summary>		
		public string Sendtocmd
		{
			get { return _sendtocmd; }
			set	
			{
				if( value!= null && value.Length > 300)
					throw new ArgumentOutOfRangeException("Invalid value for Sendtocmd", value, value.ToString());
				
				_isChanged |= (_sendtocmd != value); _sendtocmd = value;
			}
		}
			
		/// <summary>
		/// 设备回复命令
		/// </summary>		
		public string ReceCmd
		{
			get { return _rece_cmd; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for ReceCmd", value, value.ToString());
				
				_isChanged |= (_rece_cmd != value); _rece_cmd = value;
			}
		}
			
		/// <summary>
		/// 回复时间
		/// </summary>		
		public DateTime ReceTime
		{
			get { return _rece_time; }
			set { _isChanged |= (_rece_time != value); _rece_time = value; }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
