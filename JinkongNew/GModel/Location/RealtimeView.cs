// Generated by IBatisNetModel
using System;

namespace GModel.Location
{
	[Serializable]
	public  class RealtimeView
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;
		
		private double _latitude; 
		private double _longitude; 
		private double _google_latitude; 
		private double _google_longitude; 
		private DateTime _rtime; 
		private string _position; 
		private string _ter_status; 
		private string _businessdivisionid; 
		private string _businessdivisionname; 
		private string _businessdivisioncode; 
		private string _car_no; 
		private string _ter_no; 
		private string _id; 
		private string _ter_guid; 
		private string _car_id; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public RealtimeView()
		{
			_latitude = new double(); 
			_longitude = new double(); 
			_google_latitude = new double(); 
			_google_longitude = new double(); 
			_rtime = new DateTime(); 
			_position = ""; 
			_ter_status = ""; 
			_businessdivisionid = ""; 
			_businessdivisionname = ""; 
			_businessdivisioncode = ""; 
			_car_no = ""; 
			_ter_no = ""; 
			_id = ""; 
			_ter_guid = ""; 
			_car_id = ""; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public double Latitude
		{
			get { return _latitude; }
			set { _isChanged |= (_latitude != value); _latitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double Longitude
		{
			get { return _longitude; }
			set { _isChanged |= (_longitude != value); _longitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double GoogleLatitude
		{
			get { return _google_latitude; }
			set { _isChanged |= (_google_latitude != value); _google_latitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double GoogleLongitude
		{
			get { return _google_longitude; }
			set { _isChanged |= (_google_longitude != value); _google_longitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime Rtime
		{
			get { return _rtime; }
			set { _isChanged |= (_rtime != value); _rtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Position
		{
			get { return _position; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Position", value, value.ToString());
				
				_isChanged |= (_position != value); _position = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TerStatus
		{
			get { return _ter_status; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for TerStatus", value, value.ToString());
				
				_isChanged |= (_ter_status != value); _ter_status = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisionid
		{
			get { return _businessdivisionid; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionid", value, value.ToString());
				
				_isChanged |= (_businessdivisionid != value); _businessdivisionid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisionname
		{
			get { return _businessdivisionname; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionname", value, value.ToString());
				
				_isChanged |= (_businessdivisionname != value); _businessdivisionname = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisioncode
		{
			get { return _businessdivisioncode; }
			set	
			{
				if( value!= null && value.Length > 80)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisioncode", value, value.ToString());
				
				_isChanged |= (_businessdivisioncode != value); _businessdivisioncode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CarNo
		{
			get { return _car_no; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for CarNo", value, value.ToString());
				
				_isChanged |= (_car_no != value); _car_no = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TerNo
		{
			get { return _ter_no; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for TerNo", value, value.ToString());
				
				_isChanged |= (_ter_no != value); _ter_no = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Id
		{
			get { return _id; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Id", value, value.ToString());
				
				_isChanged |= (_id != value); _id = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TerGuid
		{
			get { return _ter_guid; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for TerGuid", value, value.ToString());
				
				_isChanged |= (_ter_guid != value); _ter_guid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CarId
		{
			get { return _car_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for CarId", value, value.ToString());
				
				_isChanged |= (_car_id != value); _car_id = value;
			}
		}
			
		
		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
