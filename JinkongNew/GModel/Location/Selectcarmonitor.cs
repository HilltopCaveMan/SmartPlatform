// Generated by IBatisNetModel
using System;

namespace GModel.Location
{
	[Serializable]
	public class Selectcarmonitor
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;

		private double _baidu_latitude; 
		private double _baidu_longitude; 
		private double _google_latitude; 
		private double _google_longitude; 
		private DateTime _rtime;
        private string _sleeptime;
        private string _stoplong;
        private string _settype;
        private DateTime _positioningtime;
		private string _car_no; 
		private string _car_id;
        private string _car_adminname;
        private string _owerphone;
        private string _installaddress;
        private string _installtime;
		private string _id;
        private string _rawdataid;
		private string _ifposition; 
		private double _postbacktimes;
        private string _speed;
		private string _ter_status; 
		private string _ter_no; 
		private string _position; 
		private string _ter_guid; 
		private string _ter_simcard; 
		private string _businessdivisionid; 
		private string _businessdivisionname; 
		private string _businessdivisioncode; 
		private string _pro_model;
        private string _pro_name;
        private double _carworkvmp;
        private string _replydatacode;
        private string _replydataname;
        private string _state_name;
        private double _tian_shu;
        private string _northorsouth;
        private string _eastorwest;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Selectcarmonitor()
		{
			_baidu_latitude = new double(); 
			_baidu_longitude = new double(); 
			_google_latitude = new double(); 
			_google_longitude = new double(); 
			_rtime = new DateTime();
            _sleeptime = "";
            _stoplong = "";
            _settype = "";
            _positioningtime = new DateTime();
            _speed = "";
			_car_no = ""; 
			_car_id = "";
            _car_adminname = "";
            _owerphone = "";
            _installaddress = "";
            _installtime = "";
			_id = "";
            _rawdataid = "";
			_ifposition = ""; 
			_postbacktimes = new double(); 
			_ter_status = ""; 
			_ter_no = ""; 
			_position = ""; 
			_ter_guid = ""; 
			_ter_simcard = ""; 
			_businessdivisionid = ""; 
			_businessdivisionname = ""; 
			_businessdivisioncode = ""; 
			_pro_model = "";
            _pro_name = "";
            _carworkvmp = new double();
            _replydatacode = "";
            _replydataname = "";
            _state_name = "";
            _tian_shu = new double();
            _northorsouth = "";
            _eastorwest = "";
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public double BaiduLatitude
		{
			get { return _baidu_latitude; }
			set { _isChanged |= (_baidu_latitude != value); _baidu_latitude = value; }
		}

        public DateTime Positioningtime 
        {
            get { return _positioningtime; }
            set { _positioningtime = value; }
        }
			
		/// <summary>
		/// 
		/// </summary>		
		public double BaiduLongitude
		{
			get { return _baidu_longitude; }
			set { _isChanged |= (_baidu_longitude != value); _baidu_longitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double GoogleLatitude
		{
			get { return _google_latitude; }
			set { _isChanged |= (_google_latitude != value); _google_latitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double GoogleLongitude
		{
			get { return _google_longitude; }
			set { _isChanged |= (_google_longitude != value); _google_longitude = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime Rtime
		{
			get { return _rtime; }
			set { _isChanged |= (_rtime != value); _rtime = value; }
		}

        public string Sleeptime
        {
            get { return _sleeptime; }
            set { _isChanged |= (_sleeptime != value); _sleeptime = value; }
        }

        public string StopLong
        {
            get { return _stoplong; }
            set { _isChanged |= (_stoplong != value); _stoplong = value; }
        }

        /// <summary>
        /// 101 有线 102 无线
        /// </summary>
        public string Settype
        {
            get { return _settype; }
            set { _isChanged |= (_settype != value); _settype = value; }
        }

		/// <summary>
		/// 
		/// </summary>		
		public string CarNo
		{
			get { return _car_no; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for CarNo", value, value.ToString());
				
				_isChanged |= (_car_no != value); _car_no = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CarId
		{
			get { return _car_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for CarId", value, value.ToString());
				
				_isChanged |= (_car_id != value); _car_id = value;
			}
		}


        public string CarAdminName
        {
            get { return _car_adminname; }
            set {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("", value, value.ToString());
                _isChanged |= (_car_adminname != value); _car_adminname = value;
            }
        }

        /// <summary>
        /// 车主电话
        /// </summary>
        public string OwerPhone
        {
            get { return _owerphone; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for OwerPhone", value, value.ToString());
                _isChanged |= (_owerphone != value); _owerphone = value;
            }
        }

        /// <summary>
        /// 安装位置
        /// </summary>
        public string InstallAddress
        {
            get { return _installaddress; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallAddress", value, value.ToString());
                _isChanged |= (_installaddress != value); _installaddress = value;
            }
        }

        /// <summary>
        /// 安装时间
        /// </summary>
        public string InstallTime
        {
            get { return _installtime; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for InstallTime", value, value.ToString());
                _isChanged |= (_installtime != value); _installtime = value;
            }
        }

		/// <summary>
		/// 
		/// </summary>		
		public string Id
		{
			get { return _id; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Id", value, value.ToString());
				
				_isChanged |= (_id != value); _id = value;
			}
		}

        /// <summary>
        /// 绑定的设备编号
        /// </summary>		
        public string Rawdataid
        {
            get { return _rawdataid; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Rawdataid", value, value.ToString());

                _isChanged |= (_rawdataid != value); _rawdataid = value;
            }
        }

		/// <summary>
		/// 
		/// </summary>		
		public string Ifposition
		{
			get { return _ifposition; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Ifposition", value, value.ToString());
				
				_isChanged |= (_ifposition != value); _ifposition = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public double Postbacktimes
		{
			get { return _postbacktimes; }
			set { _isChanged |= (_postbacktimes != value); _postbacktimes = value; }
		}

        /// <summary>
        /// 
        /// </summary>		
        public string Speed
        {
            get { return _speed; }
            set { _isChanged |= (_speed != value); _speed = value; }
        }

			
		/// <summary>
		/// 
		/// </summary>		
		public string TerStatus
		{
			get { return _ter_status; }
			set	
			{
				if( value!= null && value.Length > 6)
					throw new ArgumentOutOfRangeException("Invalid value for TerStatus", value, value.ToString());
				
				_isChanged |= (_ter_status != value); _ter_status = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TerNo
		{
			get { return _ter_no; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for TerNo", value, value.ToString());
				
				_isChanged |= (_ter_no != value); _ter_no = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Position
		{
			get { return _position; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Position", value, value.ToString());
				
				_isChanged |= (_position != value); _position = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TerGuid
		{
			get { return _ter_guid; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for TerGuid", value, value.ToString());
				
				_isChanged |= (_ter_guid != value); _ter_guid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string TerSimcard
		{
			get { return _ter_simcard; }
			set	
			{
				if( value!= null && value.Length > 13)
					throw new ArgumentOutOfRangeException("Invalid value for TerSimcard", value, value.ToString());
				
				_isChanged |= (_ter_simcard != value); _ter_simcard = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisionid
		{
			get { return _businessdivisionid; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionid", value, value.ToString());
				
				_isChanged |= (_businessdivisionid != value); _businessdivisionid = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisionname
		{
			get { return _businessdivisionname; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisionname", value, value.ToString());
				
				_isChanged |= (_businessdivisionname != value); _businessdivisionname = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Businessdivisioncode
		{
			get { return _businessdivisioncode; }
			set	
			{
				if( value!= null && value.Length > 80)
					throw new ArgumentOutOfRangeException("Invalid value for Businessdivisioncode", value, value.ToString());
				
				_isChanged |= (_businessdivisioncode != value); _businessdivisioncode = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ProModel
		{
			get { return _pro_model; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for ProModel", value, value.ToString());
				
				_isChanged |= (_pro_model != value); _pro_model = value;
			}
		}

        public string ProName
        {
            get{return _pro_name;}
            set{_pro_name=value;}
        }


        /// <summary>
        /// 
        /// </summary>		
        public double CarWorkVMP
        {
            get { return _carworkvmp; }
            set { _isChanged |= (_carworkvmp != value); _carworkvmp = value; }
        }

        public string ReplydataCode
        {
            get { return _replydatacode; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ReplydataCode", value, value.ToString());

                _isChanged |= (_replydatacode != value); _replydatacode = value;
            }
        }

        public string ReplydataName
        {
            get { return _replydataname; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for ReplydataName", value, value.ToString());

                _isChanged |= (_replydataname != value); _replydataname = value;
            }
        }

        public string StateName
        {
            get { return _state_name; }
            set
            {
                _isChanged |= (_state_name != value); _state_name = value;
            }
        }

        public double TianShu
        {
            get { return _tian_shu; }
            set
            {
                _isChanged |= (_tian_shu != value); _tian_shu = value;
            }
        }

        /// <summary>
        /// 蓝牙绑定
        /// </summary>		
        public string Northorsouth
        {
            get { return _northorsouth; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Northorsouth", value, value.ToString());

                _isChanged |= (_northorsouth != value); _northorsouth = value;
            }
        }

        /// <summary>
        /// 蓝牙状态
        /// </summary>		
        public string Eastorwest
        {
            get { return _eastorwest; }
            set
            {
                if (value != null && value.Length > 100)
                    throw new ArgumentOutOfRangeException("Invalid value for Eastorwest", value, value.ToString());

                _isChanged |= (_eastorwest != value); _eastorwest = value;
            }
        }

		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
