// Generated by IBatisNetModel
using System;

namespace GModel.RoleRight
{
	[Serializable]
	public class MenuPower
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;
		
		private string _menu_id; 
		private string _menu_name; 
		private string _menu_url; 
		private string _menu_parent; 
		private DateTime _menu_createtime; 
		private string _menu_icon; 
		private string _menu_type; 
		private string _fmenuname; 
		private string _fmenuparent; 
		private string _furl;
        private string _rm_id;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
        public MenuPower()
		{
			_menu_id = ""; 
			_menu_name = ""; 
			_menu_url = ""; 
			_menu_parent = ""; 
			_menu_createtime = new DateTime(); 
			_menu_icon = ""; 
			_menu_type = ""; 
			_fmenuname = ""; 
			_fmenuparent = ""; 
			_furl = "";
            _rm_id="";
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuId
		{
			get { return _menu_id; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for MenuId", value, value.ToString());
				
				_isChanged |= (_menu_id != value); _menu_id = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuName
		{
			get { return _menu_name; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for MenuName", value, value.ToString());
				
				_isChanged |= (_menu_name != value); _menu_name = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuUrl
		{
			get { return _menu_url; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for MenuUrl", value, value.ToString());
				
				_isChanged |= (_menu_url != value); _menu_url = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuParent
		{
			get { return _menu_parent; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for MenuParent", value, value.ToString());
				
				_isChanged |= (_menu_parent != value); _menu_parent = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime MenuCreatetime
		{
			get { return _menu_createtime; }
			set { _isChanged |= (_menu_createtime != value); _menu_createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuIcon
		{
			get { return _menu_icon; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for MenuIcon", value, value.ToString());
				
				_isChanged |= (_menu_icon != value); _menu_icon = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuType
		{
			get { return _menu_type; }
			set	
			{
				if( value!= null && value.Length > 4)
					throw new ArgumentOutOfRangeException("Invalid value for MenuType", value, value.ToString());
				
				_isChanged |= (_menu_type != value); _menu_type = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Fmenuname
		{
			get { return _fmenuname; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Fmenuname", value, value.ToString());
				
				_isChanged |= (_fmenuname != value); _fmenuname = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Fmenuparent
		{
			get { return _fmenuparent; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Fmenuparent", value, value.ToString());
				
				_isChanged |= (_fmenuparent != value); _fmenuparent = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Furl
		{
			get { return _furl; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Furl", value, value.ToString());
				
				_isChanged |= (_furl != value); _furl = value;
			}
		}

        public string RmId
		{
			get { return _rm_id; }
			set	
			{
				if( value!= null && value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for Furl", value, value.ToString());

                _isChanged |= (_furl != value); _rm_id = value;
			}
		}

        
			
		
		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
