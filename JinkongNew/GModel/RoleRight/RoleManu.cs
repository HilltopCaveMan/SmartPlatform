// Generated by IBatisNetModel
using System;

namespace GModel.RoleRight
{
	[Serializable]
	public class RoleManu
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private int _startdata=0;
        private int _enddata=0;
		private int _newRow = 0;
		
		private string _rm_id; 
		private string _role_id; 
		private string _menu_id; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public RoleManu()
		{
			_rm_id = ""; 
			_role_id = ""; 
			_menu_id = ""; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public string RmId
		{
			get { return _rm_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for RmId", value, value.ToString());
				
				_isChanged |= (_rm_id != value); _rm_id = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RoleId
		{
			get { return _role_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for RoleId", value, value.ToString());
				
				_isChanged |= (_role_id != value); _role_id = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuId
		{
			get { return _menu_id; }
			set	
			{
				if( value!= null && value.Length > 40)
					throw new ArgumentOutOfRangeException("Invalid value for MenuId", value, value.ToString());
				
				_isChanged |= (_menu_id != value); _menu_id = value;
			}
		}
			
		
		public int StartData
        {
            get { return _startdata;}
            set
            {
                _startdata = value;
            }
        }
		
        public int EndData
        {
            get { return _enddata; }
            set	
            {
                 _enddata = value;
            }
        }
		public int NewRow 
        {
            get { return _newRow; }
            set { _newRow = value; }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
