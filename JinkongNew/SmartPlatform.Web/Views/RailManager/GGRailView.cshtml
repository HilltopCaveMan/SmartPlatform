@model GModel.Car.SetArea
<div id="contentwrapper" class="contentwrapper">
    <div id="div_RailMap" style="height:550px;"></div>
</div>
<input type="button" value="删除当前围栏" onclick="DelRail()" style="top:5px;right:50px;position:absolute;cursor:pointer;"/>
<input type="hidden" id="hid_PointVal" value="@Model.Area_Data"/>
<input type="hidden" id="hid_Type" value="@Model.Area_Type"/>
<input type="hidden" id="hid_AreaId" value="@Model.AreaId"/>
<input type="hidden" id="hid_AreaMaptype" value="2" />
<input type="hidden" id="hid_TerNoStr" value="@ViewBag.TerNo" />
<input type="hidden" id="hid_CenterloglatZoom"/>
<script src="http://maps.google.cn/maps/api/js?sensor=false&language=zh-CN&libraries=drawing"></script>
<script src="~/assets/javascripts/markerclusterer.js"></script>
<script src="~/assets/javascripts/NameOverlay.js"></script>
<script type="text/javascript" language="javascript">
    var RailMap = {};
    RailMap.pics = null;//数据
    RailMap.Rails = [];//面状图元
    RailMap.map = null;//地图
    RailMap.markers = [];//标注
    RailMap.CarMarkers = [];//车的标记
    RailMap.markerClusterer = null;
    RailMap.infoWindow = null;
    var IndexNum = 0;
    var data = null;
    var lineSymbol_blue = {
        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
        scale: 5,
        strokeColor: '#5A5AAD'
    };

    var lineSymbol_red = {
        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
        scale: 5,
        strokeColor: '#FF0000'
    };

    function initRailMap() {
        var centerloglatzoom = '@Model.CenterloglatZoom';
        if (centerloglatzoom != "")
        {
            var loglatzoom = centerloglatzoom.split(',');
            var latlng = new google.maps.LatLng(loglatzoom[1], loglatzoom[0]);
            var options = {
                'zoom': parseInt(loglatzoom[2]),
                'center': latlng,
                'mapTypeId': google.maps.MapTypeId.ROADMAP,
            };
        }
        else
        {
            var latlng = new google.maps.LatLng(39.91, 116.38);
            var options = {
                'zoom': 5,
                'center': latlng,
                'mapTypeId': google.maps.MapTypeId.ROADMAP,
            };
        }
        RailMap.map = new google.maps.Map(document.getElementById('div_RailMap'), options);
        RailMap.infoWindow = new google.maps.InfoWindow();
        var drawingManager = new google.maps.drawing.DrawingManager({
            drawingMode: 0,
            drawingControl: true,
            drawingControlOptions: {
                position: google.maps.ControlPosition.TOP_CENTER,
                drawingModes: [
                  google.maps.drawing.OverlayType.CIRCLE,
                  google.maps.drawing.OverlayType.POLYGON,
                  google.maps.drawing.OverlayType.RECTANGLE
                ]
            },
            markerOptions: {
                icon: 'images/beachflag.png'
            },
            circleOptions: {
                strokeColor: "red",    //边线颜色。
                fillColor: "red",      //填充颜色。当参数为空时，圆形将没有填充效果。
                strokeWeight: 1,       //边线的宽度，以像素为单位。
                strokeOpacity: 0.6,	   //边线透明度，取值范围0 - 1。
                fillOpacity: 0.4,      //填充的透明度，取值范围0 - 1。
                strokeStyle: 'solid'   //边线的样式，solid或dashed。
            }
        });
        drawingManager.setMap(RailMap.map);
        google.maps.event.addListener(drawingManager, 'overlaycomplete', function (event) {
            var PointArr;
            CurrentShape = event.overlay;
            if (event.type == google.maps.drawing.OverlayType.POLYGON) { //多边形
                PointArr = event.overlay.getPath();
                var PolygonVal = "";
                if (PointArr != null) {
                    if (PointArr.length > 100) {
                        $.messager.alert('警告', '多边形不能超过100个折点', 'error');
                        CurrentShape.setMap(null);
                        return;
                    }
                    else {
                        for (var i = 0; i < PointArr.length; i++) {
                            PolygonVal += PointArr.getAt(i);
                        }
                        $("#hid_PointVal").val(PolygonVal);
                        var lat = PointArr.getAt(PointArr.length - 1).lat();
                        var lng = PointArr.getAt(PointArr.length - 1).lng();
                        var zoom = RailMap.map.getZoom();
                        $("#hid_CenterloglatZoom").val(lng+","+lat+","+zoom);
                        $("#hid_Type").val("2");
                    }
                }
            } else if (event.type == google.maps.drawing.OverlayType.CIRCLE) { //圆
                PointArr = event.overlay.getCenter();
                var Radius = event.overlay.getRadius();
                $("#hid_PointVal").val(PointArr + "$" + Radius);
                $("#hid_CenterloglatZoom").val(PointArr.lng() + "," + PointArr.lat() + "," + RailMap.map.getZoom());
                $("#hid_Type").val("1");
            } else if (event.type == google.maps.drawing.OverlayType.RECTANGLE) { //方形
                PointArr = event.overlay.getBounds();
                $("#hid_PointVal").val(PointArr);
                $("#hid_CenterloglatZoom").val(PointArr.getCenter().lng() + "," + PointArr.getCenter().lat() + "," + RailMap.map.getZoom());
                $("#hid_Type").val("0");
            }
            parent.$.messager.confirm('确定', "确定要设置此围栏?", function (result) {
                if (result) {
                    AddAreaInfo();
                }
                else {
                    CurrentShape.setMap(null);
                }
            });

        });
    }

    function deletePoint() {
        if (CurrentShape != null) {
            CurrentShape.setMap(null);
        }
    }

    RailMap.init = function () {
        //添加设备
        AddTer();

        var Area_Type='@Model.Area_Type';
        var Area_Data = '@Model.Area_Data';
        if (Area_Type == "" || Area_Data == "")
        {
            return;
        }
        RailMap.clear();
        if (Area_Type == 1) {    //圆形
            var m = Area_Data.split('|');
            var x = parseFloat(m[0].split(',')[1]);
            var y = parseFloat(m[0].split(',')[0]);
            var radius = parseFloat(m[1]);
            var populationOptions = {
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: RailMap.map,
                center: new google.maps.LatLng(x, y),
                radius: radius
            };
            var circle = new google.maps.Circle(populationOptions);
            CurrentShape = circle;
            RailMap.Rails.push(circle);
            RailMap.map.setCenter(circle.getCenter());
        } else if (Area_Type == 0) {   //方形
            var m = Area_Data.split('|');
            var rectangle = new google.maps.Rectangle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: RailMap.map,
                bounds: new google.maps.LatLngBounds(
                  new google.maps.LatLng(m[0].split(',')[1], m[0].split(',')[0]),
                  new google.maps.LatLng(m[1].split(',')[1], m[1].split(',')[0]))
            });
            CurrentShape = rectangle;
            RailMap.Rails.push(rectangle);
            RailMap.map.setCenter(rectangle.getBounds().getCenter());
        } else if (Area_Type == 2) {   //多边形
            //面状图元
            var triangleCoords = new Array();
            var Points = Area_Data.split('|');
            for (n = 0; n < Points.length; n++) {
                var Point = Points[n];
                triangleCoords.push(new google.maps.LatLng(parseFloat(Point.split(',')[1]), parseFloat(Point.split(',')[0])));
            }
            //第一个点闭合
            var FPoint = Points[0];
            triangleCoords.push(new google.maps.LatLng(parseFloat(FPoint.split(',')[1]), parseFloat(FPoint.split(',')[0])));

            var Polygon = new google.maps.Polygon({
                paths: triangleCoords,
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35
            });
            RailMap.Rails.push(Polygon);
            Polygon.setMap(RailMap.map);
            var patharr = Polygon.getPath();
            RailMap.map.setCenter(patharr.getAt(patharr.length - 1));
        }    
    };

    RailMap.clear = function () {
        for (var i = 0, marker = RailMap.markers[i]; i++;) {
            marker.setMap(null);
        }
        for (var index = 0, marker = RailMap.CarMarkers[index]; index++;) {
            marker.setMap(null);
        }
        for (var k = 0; k < RailMap.Rails.length; k++) {
            RailMap.Rails[k].setMap(null);
        }
    };

    RailMap.change = function () {
        RailMap.clear();
        RailMap.showMarkers();
    };

    //删除
    var delnum=0;
    function DelRail() {
        var AreaId = $("#hid_AreaId").val();
        if (delnum==1 || AreaId == "") {
            $.messager.alert('警告', '当前围栏已经为空', 'error');
        }
        else {
            $.messager.confirm('确定', '您确定要删除吗', function (t) {
                if (t) {
                    $.ajax({
                        url: '/RailManager/Delete?AreaId=' + AreaId,
                        cache: false,
                        type: "post",
                        success: function (r) {
                            $.messager.alert('提示', r, 'info');
                            delnum = 1;
                            RailMap.clear();
                        }
                    });
                }
            });
        }
    }

    //添加围栏
    function AddAreaInfo() {
        var SelectTerNoStr = $("#hid_TerNoStr").val();
        var Areatype = $("#hid_Type").val();
        var AreaData = $("#hid_PointVal").val();
        var AreaMaptype = $("#hid_AreaMaptype").val();
        var CenterloglatZoom = $("#hid_CenterloglatZoom").val();
        $.ajax({
            type: 'post',
            cache: false,
            url: '/RailManager/AddCarIdstr',
            data: { SelectTerNoStr: SelectTerNoStr, AreaType: Areatype, AreaData: AreaData, AreaMaptype: AreaMaptype, CenterloglatZoom: CenterloglatZoom },
            success: function (data) {
                if (data == "成功") {
                    $.messager.progress({
                        title: '提示',
                        msg: '添加成功,稍等几秒刷新页面...',
                        interval:500
                    });
                    setTimeout(CountDown, 5000);
                    function CountDown() {
                        window.location.reload();
                    }
                } else {
                    $.messager.alert('提示', data, 'info');
                }
            }
        });
    }


    //清除覆盖物
    //function DeleteOverly() {
    //    RailMap.clear();
    //}

    $(function () {
        initRailMap();
        RailMap.init();
    });

    //添加设备
    function AddTer() {
        $.post("/CarMonitor/GetList", { TerNo: "@ViewBag.TerNo", DeptCode: "true", SelType: "Ter", RowNumber: 1 },
            function (e) {
                var terdata = eval(e);
                if (terdata != null && terdata.length > 0) {
                    var obj_marker = terdata[0];
                    if (obj_marker.GoogleLatitude != 0 && obj_marker.GoogleLongitude != 0) {
                        //创建 marker
                        var marker = CreateMarker(obj_marker);
                        var markers = [];
                        markers.push(marker);
                        RailMap.markers = markers;
                        GoogleMarkerClusterer(markers);
                    }
                }
            }
        );
    }

    //创建 marker
    function CreateMarker(obj_marker) {
        var lineSymbol = {
            path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
            scale: 5,
            strokeColor: '#5A5AAD'
        };
        var pt = new google.maps.LatLng(obj_marker.GoogleLatitude, obj_marker.GoogleLongitude);
        var marker = new google.maps.Marker({
            'position': pt,
            'icon': lineSymbol,
            'CarNo': obj_marker.CarNo,
            'TerNo': obj_marker.TerNo,

            'TerStatus': obj_marker.TerStatus,
            'Positioningtime': obj_marker.Positioningtime,
            'CarPosition': obj_marker.Position,
            'Speed': obj_marker.Speed,
            'StateName': obj_marker.StateName
        });
        marker.ObjectId = obj_marker.id;
        return marker;
    }

    //聚合
    function GoogleMarkerClusterer(markers) {
        var options = {
            gridSize: 40,
            minimumClusterSize: 2,
            maxZoom: 21
        };
        if (RailMap.markers.length > 0) {
            RailMap.markerClusterer = new MarkerClusterer(
                                                    RailMap.map,
                                                    markers,
                                                    options,
                                                    RailMap.infoWindow);
        }
    }
</script>

